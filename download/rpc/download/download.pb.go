// Code generated by protoc-gen-go. DO NOT EDIT.
// source: download.proto

package download

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ComicRequest struct {
	Website              string   `protobuf:"bytes,1,opt,name=website,proto3" json:"website,omitempty"`
	Comic                string   `protobuf:"bytes,2,opt,name=comic,proto3" json:"comic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComicRequest) Reset()         { *m = ComicRequest{} }
func (m *ComicRequest) String() string { return proto.CompactTextString(m) }
func (*ComicRequest) ProtoMessage()    {}
func (*ComicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7ce52b48c9eea83, []int{0}
}

func (m *ComicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComicRequest.Unmarshal(m, b)
}
func (m *ComicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComicRequest.Marshal(b, m, deterministic)
}
func (m *ComicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComicRequest.Merge(m, src)
}
func (m *ComicRequest) XXX_Size() int {
	return xxx_messageInfo_ComicRequest.Size(m)
}
func (m *ComicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComicRequest proto.InternalMessageInfo

func (m *ComicRequest) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *ComicRequest) GetComic() string {
	if m != nil {
		return m.Comic
	}
	return ""
}

type ComicResponse struct {
	Url                  string            `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Title                string            `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Summary              string            `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Cover                string            `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Chapters             map[string]string `protobuf:"bytes,5,rep,name=chapters,proto3" json:"chapters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Indexes              []string          `protobuf:"bytes,6,rep,name=indexes,proto3" json:"indexes,omitempty"`
	Latest               string            `protobuf:"bytes,7,opt,name=latest,proto3" json:"latest,omitempty"`
	Source               string            `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ComicResponse) Reset()         { *m = ComicResponse{} }
func (m *ComicResponse) String() string { return proto.CompactTextString(m) }
func (*ComicResponse) ProtoMessage()    {}
func (*ComicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7ce52b48c9eea83, []int{1}
}

func (m *ComicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComicResponse.Unmarshal(m, b)
}
func (m *ComicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComicResponse.Marshal(b, m, deterministic)
}
func (m *ComicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComicResponse.Merge(m, src)
}
func (m *ComicResponse) XXX_Size() int {
	return xxx_messageInfo_ComicResponse.Size(m)
}
func (m *ComicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ComicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ComicResponse proto.InternalMessageInfo

func (m *ComicResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ComicResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ComicResponse) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *ComicResponse) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *ComicResponse) GetChapters() map[string]string {
	if m != nil {
		return m.Chapters
	}
	return nil
}

func (m *ComicResponse) GetIndexes() []string {
	if m != nil {
		return m.Indexes
	}
	return nil
}

func (m *ComicResponse) GetLatest() string {
	if m != nil {
		return m.Latest
	}
	return ""
}

func (m *ComicResponse) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type ChapterRequest struct {
	Chapter              string   `protobuf:"bytes,1,opt,name=chapter,proto3" json:"chapter,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChapterRequest) Reset()         { *m = ChapterRequest{} }
func (m *ChapterRequest) String() string { return proto.CompactTextString(m) }
func (*ChapterRequest) ProtoMessage()    {}
func (*ChapterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7ce52b48c9eea83, []int{2}
}

func (m *ChapterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChapterRequest.Unmarshal(m, b)
}
func (m *ChapterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChapterRequest.Marshal(b, m, deterministic)
}
func (m *ChapterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChapterRequest.Merge(m, src)
}
func (m *ChapterRequest) XXX_Size() int {
	return xxx_messageInfo_ChapterRequest.Size(m)
}
func (m *ChapterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChapterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChapterRequest proto.InternalMessageInfo

func (m *ChapterRequest) GetChapter() string {
	if m != nil {
		return m.Chapter
	}
	return ""
}

func (m *ChapterRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ChapterResponse struct {
	Url                  string            `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Title                string            `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Ctitle               string            `protobuf:"bytes,3,opt,name=ctitle,proto3" json:"ctitle,omitempty"`
	Pictures             map[string]string `protobuf:"bytes,4,rep,name=pictures,proto3" json:"pictures,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ChapterResponse) Reset()         { *m = ChapterResponse{} }
func (m *ChapterResponse) String() string { return proto.CompactTextString(m) }
func (*ChapterResponse) ProtoMessage()    {}
func (*ChapterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7ce52b48c9eea83, []int{3}
}

func (m *ChapterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChapterResponse.Unmarshal(m, b)
}
func (m *ChapterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChapterResponse.Marshal(b, m, deterministic)
}
func (m *ChapterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChapterResponse.Merge(m, src)
}
func (m *ChapterResponse) XXX_Size() int {
	return xxx_messageInfo_ChapterResponse.Size(m)
}
func (m *ChapterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChapterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChapterResponse proto.InternalMessageInfo

func (m *ChapterResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ChapterResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ChapterResponse) GetCtitle() string {
	if m != nil {
		return m.Ctitle
	}
	return ""
}

func (m *ChapterResponse) GetPictures() map[string]string {
	if m != nil {
		return m.Pictures
	}
	return nil
}

type UpdateRequest struct {
	Comic                string   `protobuf:"bytes,1,opt,name=comic,proto3" json:"comic,omitempty"`
	Latest               string   `protobuf:"bytes,2,opt,name=latest,proto3" json:"latest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7ce52b48c9eea83, []int{4}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetComic() string {
	if m != nil {
		return m.Comic
	}
	return ""
}

func (m *UpdateRequest) GetLatest() string {
	if m != nil {
		return m.Latest
	}
	return ""
}

type UpdateResponse struct {
	Chapters             map[string]string `protobuf:"bytes,1,rep,name=chapters,proto3" json:"chapters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Indexes              []string          `protobuf:"bytes,2,rep,name=indexes,proto3" json:"indexes,omitempty"`
	Latest               string            `protobuf:"bytes,3,opt,name=latest,proto3" json:"latest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7ce52b48c9eea83, []int{5}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetChapters() map[string]string {
	if m != nil {
		return m.Chapters
	}
	return nil
}

func (m *UpdateResponse) GetIndexes() []string {
	if m != nil {
		return m.Indexes
	}
	return nil
}

func (m *UpdateResponse) GetLatest() string {
	if m != nil {
		return m.Latest
	}
	return ""
}

func init() {
	proto.RegisterType((*ComicRequest)(nil), "download.ComicRequest")
	proto.RegisterType((*ComicResponse)(nil), "download.ComicResponse")
	proto.RegisterMapType((map[string]string)(nil), "download.ComicResponse.ChaptersEntry")
	proto.RegisterType((*ChapterRequest)(nil), "download.ChapterRequest")
	proto.RegisterType((*ChapterResponse)(nil), "download.ChapterResponse")
	proto.RegisterMapType((map[string]string)(nil), "download.ChapterResponse.PicturesEntry")
	proto.RegisterType((*UpdateRequest)(nil), "download.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "download.UpdateResponse")
	proto.RegisterMapType((map[string]string)(nil), "download.UpdateResponse.ChaptersEntry")
}

func init() { proto.RegisterFile("download.proto", fileDescriptor_f7ce52b48c9eea83) }

var fileDescriptor_f7ce52b48c9eea83 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xd6, 0xda, 0x89, 0x63, 0x06, 0x12, 0xd0, 0x0a, 0xb5, 0x4b, 0x4f, 0x91, 0x25, 0x20, 0xa7,
	0x08, 0x95, 0x0b, 0xe2, 0xa7, 0x88, 0x06, 0xee, 0x28, 0x12, 0x0f, 0xe0, 0xda, 0x23, 0xd5, 0xaa,
	0x63, 0x9b, 0xdd, 0x75, 0x4a, 0x1e, 0x8b, 0x67, 0xe0, 0xcc, 0x89, 0x17, 0x42, 0xbb, 0x3b, 0x6b,
	0x6c, 0x15, 0x4b, 0x44, 0xdc, 0xf6, 0x9b, 0xcc, 0xcc, 0x37, 0xdf, 0x37, 0x13, 0xc3, 0x22, 0xaf,
	0x6f, 0xab, 0xb2, 0x4e, 0xf3, 0x75, 0x23, 0x6b, 0x5d, 0xf3, 0xd8, 0xe3, 0xe4, 0x02, 0x1e, 0x6c,
	0xea, 0x5d, 0x91, 0x6d, 0xf1, 0x6b, 0x8b, 0x4a, 0x73, 0x01, 0xb3, 0x5b, 0xbc, 0x52, 0x85, 0x46,
	0xc1, 0x96, 0x6c, 0x75, 0x6f, 0xeb, 0x21, 0x7f, 0x0c, 0xd3, 0xcc, 0x64, 0x8a, 0xc0, 0xc6, 0x1d,
	0x48, 0xbe, 0x07, 0x30, 0xa7, 0x06, 0xaa, 0xa9, 0x2b, 0x85, 0xfc, 0x11, 0x84, 0xad, 0x2c, 0xa9,
	0xda, 0x3c, 0x4d, 0xa5, 0x2e, 0x74, 0x89, 0xbe, 0xd2, 0x02, 0xc3, 0xa4, 0xda, 0xdd, 0x2e, 0x95,
	0x07, 0x11, 0x3a, 0x26, 0x82, 0x8e, 0x69, 0x8f, 0x52, 0x4c, 0x3c, 0xd3, 0x1e, 0x25, 0xff, 0x00,
	0x71, 0x76, 0x9d, 0x36, 0x1a, 0xa5, 0x12, 0xd3, 0x65, 0xb8, 0xba, 0x7f, 0xfe, 0x74, 0xdd, 0xc9,
	0x1a, 0x8c, 0xb0, 0xde, 0x50, 0xde, 0xa7, 0x4a, 0xcb, 0xc3, 0xb6, 0x2b, 0x33, 0x94, 0x45, 0x95,
	0xe3, 0x37, 0x54, 0x22, 0x5a, 0x86, 0x86, 0x92, 0x20, 0x3f, 0x81, 0xa8, 0x4c, 0x35, 0x2a, 0x2d,
	0x66, 0x96, 0x93, 0x90, 0x89, 0xab, 0xba, 0x95, 0x19, 0x8a, 0xd8, 0xc5, 0x1d, 0x3a, 0x7b, 0x03,
	0xf3, 0x01, 0x89, 0x51, 0x7d, 0x83, 0x07, 0xaf, 0xfa, 0x06, 0xad, 0x8a, 0x7d, 0x5a, 0xb6, 0x9d,
	0x6a, 0x0b, 0x5e, 0x07, 0xaf, 0x58, 0x72, 0x01, 0x0b, 0x2a, 0xee, 0xb9, 0x4e, 0x43, 0x7a, 0xd7,
	0x09, 0x72, 0x0e, 0x93, 0x26, 0xd5, 0xd7, 0xd4, 0xc4, 0xbe, 0x93, 0x5f, 0x0c, 0x1e, 0x76, 0x0d,
	0x8e, 0x74, 0xfd, 0x04, 0xa2, 0xcc, 0x85, 0x9d, 0xe9, 0x84, 0xf8, 0x06, 0xe2, 0xa6, 0xc8, 0x74,
	0x2b, 0x51, 0x89, 0x89, 0x75, 0xf7, 0x79, 0xcf, 0xdd, 0x21, 0xd9, 0xfa, 0x33, 0x65, 0x92, 0xbf,
	0xbe, 0xd0, 0xb8, 0x32, 0xf8, 0xe9, 0x28, 0x57, 0xde, 0xc1, 0xfc, 0x4b, 0x93, 0xa7, 0x1a, 0xbd,
	0x29, 0xdd, 0xc1, 0xb1, 0xde, 0xc1, 0xf5, 0x36, 0x15, 0xf4, 0x37, 0x95, 0xfc, 0x60, 0xb0, 0xf0,
	0xf5, 0xe4, 0xc9, 0x65, 0xef, 0x62, 0x98, 0xd5, 0xf4, 0xec, 0x8f, 0xa6, 0x61, 0xee, 0xbf, 0x9c,
	0x4c, 0x30, 0x76, 0x32, 0x61, 0x7f, 0x90, 0xff, 0x3a, 0x8d, 0xf3, 0x9f, 0x0c, 0xe2, 0x8f, 0x34,
	0x22, 0x7f, 0x0b, 0xd3, 0x8d, 0xd3, 0x7c, 0xe7, 0xd0, 0xad, 0x43, 0x67, 0xa7, 0x23, 0x7f, 0x80,
	0x15, 0x7b, 0xc1, 0xf8, 0x25, 0xcc, 0x68, 0x0e, 0x2e, 0xfe, 0xb2, 0x4a, 0xd7, 0xe1, 0xc9, 0xe8,
	0x92, 0x6d, 0x8f, 0xf7, 0x10, 0x39, 0x9f, 0xf8, 0xe9, 0x5d, 0xe7, 0x5c, 0x07, 0x31, 0x66, 0xa9,
	0x69, 0x70, 0x15, 0xd9, 0xef, 0xcd, 0xcb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8e, 0xc0, 0xd8,
	0xd6, 0x81, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DownloadClient is the client API for Download service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DownloadClient interface {
	Comic(ctx context.Context, opts ...grpc.CallOption) (Download_ComicClient, error)
	Chapter(ctx context.Context, opts ...grpc.CallOption) (Download_ChapterClient, error)
	Update(ctx context.Context, opts ...grpc.CallOption) (Download_UpdateClient, error)
}

type downloadClient struct {
	cc *grpc.ClientConn
}

func NewDownloadClient(cc *grpc.ClientConn) DownloadClient {
	return &downloadClient{cc}
}

func (c *downloadClient) Comic(ctx context.Context, opts ...grpc.CallOption) (Download_ComicClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Download_serviceDesc.Streams[0], "/download.Download/Comic", opts...)
	if err != nil {
		return nil, err
	}
	x := &downloadComicClient{stream}
	return x, nil
}

type Download_ComicClient interface {
	Send(*ComicRequest) error
	Recv() (*ComicResponse, error)
	grpc.ClientStream
}

type downloadComicClient struct {
	grpc.ClientStream
}

func (x *downloadComicClient) Send(m *ComicRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *downloadComicClient) Recv() (*ComicResponse, error) {
	m := new(ComicResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *downloadClient) Chapter(ctx context.Context, opts ...grpc.CallOption) (Download_ChapterClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Download_serviceDesc.Streams[1], "/download.Download/Chapter", opts...)
	if err != nil {
		return nil, err
	}
	x := &downloadChapterClient{stream}
	return x, nil
}

type Download_ChapterClient interface {
	Send(*ChapterRequest) error
	Recv() (*ChapterResponse, error)
	grpc.ClientStream
}

type downloadChapterClient struct {
	grpc.ClientStream
}

func (x *downloadChapterClient) Send(m *ChapterRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *downloadChapterClient) Recv() (*ChapterResponse, error) {
	m := new(ChapterResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *downloadClient) Update(ctx context.Context, opts ...grpc.CallOption) (Download_UpdateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Download_serviceDesc.Streams[2], "/download.Download/Update", opts...)
	if err != nil {
		return nil, err
	}
	x := &downloadUpdateClient{stream}
	return x, nil
}

type Download_UpdateClient interface {
	Send(*UpdateRequest) error
	Recv() (*UpdateResponse, error)
	grpc.ClientStream
}

type downloadUpdateClient struct {
	grpc.ClientStream
}

func (x *downloadUpdateClient) Send(m *UpdateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *downloadUpdateClient) Recv() (*UpdateResponse, error) {
	m := new(UpdateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DownloadServer is the server API for Download service.
type DownloadServer interface {
	Comic(Download_ComicServer) error
	Chapter(Download_ChapterServer) error
	Update(Download_UpdateServer) error
}

// UnimplementedDownloadServer can be embedded to have forward compatible implementations.
type UnimplementedDownloadServer struct {
}

func (*UnimplementedDownloadServer) Comic(srv Download_ComicServer) error {
	return status.Errorf(codes.Unimplemented, "method Comic not implemented")
}
func (*UnimplementedDownloadServer) Chapter(srv Download_ChapterServer) error {
	return status.Errorf(codes.Unimplemented, "method Chapter not implemented")
}
func (*UnimplementedDownloadServer) Update(srv Download_UpdateServer) error {
	return status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterDownloadServer(s *grpc.Server, srv DownloadServer) {
	s.RegisterService(&_Download_serviceDesc, srv)
}

func _Download_Comic_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DownloadServer).Comic(&downloadComicServer{stream})
}

type Download_ComicServer interface {
	Send(*ComicResponse) error
	Recv() (*ComicRequest, error)
	grpc.ServerStream
}

type downloadComicServer struct {
	grpc.ServerStream
}

func (x *downloadComicServer) Send(m *ComicResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *downloadComicServer) Recv() (*ComicRequest, error) {
	m := new(ComicRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Download_Chapter_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DownloadServer).Chapter(&downloadChapterServer{stream})
}

type Download_ChapterServer interface {
	Send(*ChapterResponse) error
	Recv() (*ChapterRequest, error)
	grpc.ServerStream
}

type downloadChapterServer struct {
	grpc.ServerStream
}

func (x *downloadChapterServer) Send(m *ChapterResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *downloadChapterServer) Recv() (*ChapterRequest, error) {
	m := new(ChapterRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Download_Update_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DownloadServer).Update(&downloadUpdateServer{stream})
}

type Download_UpdateServer interface {
	Send(*UpdateResponse) error
	Recv() (*UpdateRequest, error)
	grpc.ServerStream
}

type downloadUpdateServer struct {
	grpc.ServerStream
}

func (x *downloadUpdateServer) Send(m *UpdateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *downloadUpdateServer) Recv() (*UpdateRequest, error) {
	m := new(UpdateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Download_serviceDesc = grpc.ServiceDesc{
	ServiceName: "download.Download",
	HandlerType: (*DownloadServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Comic",
			Handler:       _Download_Comic_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Chapter",
			Handler:       _Download_Chapter_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Update",
			Handler:       _Download_Update_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "download.proto",
}
